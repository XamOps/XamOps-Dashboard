name: CI/CD Pipeline for XamOps-Dashboard

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Check out the entire repository including submodules if you have any.
          submodules: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REPOSITORY: xamops
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Use the -f flag to specify the Dockerfile location and the build context.
          # The build context is the 'cloud' directory where the pom.xml and src folders are.
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f cloud/Dockerfile ./cloud
          # Push the image to your ECR repository
          docker push $ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Starting deployment on EC2 instance..."
            # Authenticate with ECR on the EC2 instance
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 605134457560.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

            echo "Pulling the new Docker image..."
            # Pull the new image using the unique tag from the GitHub commit
            docker pull 605134457560.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/xamops:${{ github.sha }}

            echo "Stopping old container..."
            # Stop and remove any existing container named 'xamops-dashboard'
            docker stop xamops-dashboard || true
            docker rm xamops-dashboard || true

            echo "Running the new container..."
            # Run a new container from the newly pulled image
            docker run -d --name xamops-dashboard -p 8080:8080 605134457560.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/xamops:${{ github.sha }}
            
            echo "Deployment complete."
